// $slice in projection context (supported)
[2025-05-12T11:00:00.123Z] DEBUG: Executing query with projection slice: db.articles.find(
  { category: "technology" },
  { title: 1, content: 1, "comments": { $slice: 5 } }
)

// $slice in update context (unsupported)
[2025-05-12T11:05:00.456Z] DEBUG: Executing update with slice: db.users.update(
  { _id: 123 },
  { $push: { comments: { $each: [{ text: "Great article!" }], $slice: -10 } } }
)

// $slice in aggregation context (supported)
[2025-05-12T11:10:00.789Z] DEBUG: Executing aggregation with slice: db.articles.aggregate([
  { $match: { category: "technology" } },
  { $project: { title: 1, recentComments: { $slice: ["$comments", 5] } } }
])

// $sort in stage context (supported)
[2025-05-12T11:15:00.123Z] DEBUG: Executing aggregation with sort stage: db.orders.aggregate([
  { $match: { status: "completed" } },
  { $sort: { total: -1 } }
])

// $sort in update context (unsupported)
[2025-05-12T11:20:00.456Z] DEBUG: Executing update with sort: db.users.update(
  { _id: 123 },
  { $push: { scores: { $each: [85, 92, 78], $sort: 1 } } }
)

// $push in update context (unsupported)
[2025-05-12T11:25:00.789Z] DEBUG: Executing update with push: db.products.updateOne(
  { _id: 456 },
  { $push: { tags: "sale" } }
)

// $push in accumulator context (supported)
[2025-05-12T11:30:00.123Z] DEBUG: Executing aggregation with push accumulator: db.sales.aggregate([
  { $group: { 
      _id: "$region", 
      allProducts: { $push: "$product" }
    } 
  }
])

// Multiple contexts in one query
[2025-05-12T11:35:00.456Z] DEBUG: Executing complex query with multiple contexts:
db.inventory.aggregate([
  // $sort in stage context (supported)
  { $sort: { quantity: -1 } },
  { $group: {
      _id: "$category",
      // $push in accumulator context (supported)
      items: { $push: { name: "$name", qty: "$quantity" } }
    }
  },
  { $project: {
      category: "$_id",
      // $slice in projection context (supported)
      topItems: { $slice: ["$items", 3] }
    }
  }
])

// Update with multiple context operators
[2025-05-12T11:40:00.789Z] DEBUG: Executing complex update with multiple contexts:
db.users.updateOne(
  { _id: 789 },
  { 
    // $push in update context (unsupported)
    $push: { 
      history: { 
        $each: [{ action: "login", timestamp: new Date() }],
        // $slice in update context (unsupported)
        $slice: -50,
        // $sort in update context (unsupported)
        $sort: { timestamp: -1 }
      }
    }
  }
)
